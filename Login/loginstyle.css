@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@200;300;400;500;600;700;800&display=swap");

/*  */

*{
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}

/* En esta parte se configura las posiciones y los aspectos de todas las clases y partes del .html */
/* Todos los empezados con "." son una clase extraída del .html */


body, input{
    font-family: 'Poppins', sans-serif;
}

/* Al mencionar al container, todas las clases Hijas dentro de este cambian su estilo, porque es la clase Padre de todas ellas */
/* De ahí el nombre de contenedor, porque dentro de este están todos las clases que creamos en él */
.container{
    position: relative;
    width: 100%;
    min-height: 100vh;
    background-color: white;
    overflow: hidden;
}

/* Añade una forma de semicirculo al fondo del "container", básicamente, al fondo de toda la página */
/* Se le añade curvatura con el "border-radius" y un color graduado con "background: linear-gradient" */
.container:before{
    content: '';
    position: absolute;
    width: 2000px;
    height: 2000px;
    border-radius: 50%;
    background: linear-gradient(-45deg, #6693f5, #0f52ba);
    top: 20%;
    right: 48%;
    transform: translateY(-50%);
    z-index:6;
    transition: 1.8s ease-in-out;
}

/* Se coloca cerca de un "ancestro", en este caso la clase .container, y se mueve con ella, o cerca de ella, sin importar donde se mueva la página */
/* Si NO se define este "absolute", la página deja moverse a lo largo de ella con scroll wheel */
.forms-container{
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
} 

/* El grid acá hace que los dos forms se stackeen entre ellos, hace que el contenedor de la grid tenga una columna nomás */
.signin-signup{
    position: absolute;
    top: 50%;
    left: 75%;
    transform: translate(-50%, -50%);
    width: 50%;
    display: grid;
    grid-template-columns: 1fr;
    z-index: 5;
    transition: 1s 0.7s ease-in-out;
}

/* Todo lo dentro de <form> se va a hacer "flexible" para moverse a lo largo de los cuadros que .container tiene y se centra en forma de "columna" (uno encima de otro) */
/* Los "grid" acá, crean un cuadro en que los formularios se colocan y no pueden moverse de, por lo que se logra stackearlos */
form{
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    padding: 0 5rem;
    overflow: hidden;
    grid-column: 1 / 2;
    grid-row: 1 / 2;
    transition: 0.2s 0.7s ease-in-out;
}

/* Esto se pone para ocultar el sign up form y poner al sign in form encima de este, así se pueda ingresar datos */
/* El "z-index: 2" pone al sign in form encima del sign up form, porque este define el orden en que se stackean */
form.sign-in-form{
    z-index: 2;
}
form.sign-up-form{
    z-index: 1;
    opacity: 0;
}

.omnavi{
    position: relative;
    top: auto;
    font-size: 8rem;
    font-weight: 1000;
    color: white;
    -webkit-text-stroke: 2px #6693f5;
}

/* El "margin" de este elemento sirve para establecer cuánto espacio de separado tiene con los otros elementos */
.title{
    font-size: 2.2rem;
    color: #783201;
    margin-bottom: 10px;
    font-weight: 300;
}

/* "grid" hace que se agrupen los elementos en forma de tabla, pero más complejas, con cambios individuales de largo, ancho, alto, y mucho más */
/* El grid en este estilo hace que el 15% (de izquierda a derecha) sea el "background" y el otros 85% no. Por lo que separa los colores y elementos de input */
/* El padding le añade algo como un "suavizado" al fondo del elemento, en este caso, detrás de los inputs se pone una parte del background pero menor al izquierdo */
.input-field{
    max-width: 380px;
    width: 100%;
    height: 55px;
    background-color: #3cb043;
    margin: 10px 0;
    border-radius: 55px;
    display: grid;
    grid-template-columns: 15% 85%;
    padding: 0 .4rem;
}

/* Alinea los íconos al centro dentro de un radio vertical de 55px, mismo radio que el background de ".input-field" */
/* La "i" es la "variable" de Username y de Password que se creó dentro de la clase .input-field */
/* Esta variable "i" son los íconos de CSS de "fas fa-user", que es el código para llamar a la personita del Username, o también con "fas fa-lock", el candado */
.input-field i{
    text-align: center;
    line-height: 55px;
    color: white;
    font-size: 1.1rem;
}

/* El "input" significa que cambiará el diseño de todo lo que esté dentro de las casillas para ingresar datos */
/* Estos "none" hacen que los cuadritos alrededor de los input "Usuario" y "Contraseña" se hagan invisble */
/* Se establece el tamaño de la línea y de la fuente, pero también se puede cambiar el color que tomará el texto que ingresemos */
.input-field input{
    background: none;
    outline: none;
    border: none;
    line-height: 1;
    font-weight: 600;
    font-size: 1.1rem;
    color: white;
}

/* Esto cambia el color del "placeholder" de Usuario y Contraseña, o sea, lo que se muestra antes de ingresar datos al .input-field */
/* Importante especificar la clase (.input-field) y la parte del input a cambiar (input::placeholder) */
.input-field input::placeholder {
    color: #d4d4d3;
    opacity: 1;
    font-weight: 250;
}

/* El "border-radius" sirve para hacer las esquinas del elemento redondeadas */
.btn{
    width: 150px;
    height: 49px;
    border: none;
    outline: none;
    border-radius: 49px;
    cursor: pointer;
    background-color: #6693f5;
    color: white;
    text-transform: uppercase;
    font-weight: 600;
    margin: 10px 0;
    transition: .5s;
}

/* 
IMPORTANTE: esto hace que al pasar el cursor por encima del elemento, se transicione a otro color
Esto es gracias a ":hover" después de la definición de la clase ".btn"
*/
.btn:hover{
    background-color: #de3963;
}

.social-text{
    padding: .7rem 0;
    font-size: 1rem;
    color: #783201;
}

.social-media{
    display: flex;
    justify-content: center;
}

/* "display: flex;" básicamente sirve para hacer que el diseño de elementos clickeables juntados sean fáciles de organizar */
/* En este caso, al usar "justify-content: center;" hacemos que los íconos de .social-icon se pongan en el centro de la línea horizontal en que se encuentran */
/* Este justify juntado con "align-items" (que pone los elementos en el centro de su caja individual verticalmente) hace que se pongan al centro del borde */
.social-icon, .g-signin2{
    width: 46px;
    height: 46px;
    border: 1px solid #6693f5;
    margin: 0 0.45rem;
    display: flex;
    justify-content: center;
    align-items: center;
    text-decoration: none;
    color: #6693f5;
    font-size: 1.1rem;
    border-radius: 50%;
    transition: 0.3s;
}

.social-icon:hover, .g-signin2:hover{
    color: #de3963;
    border-color: #de3963;
}

.panels-container{
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    display: grid;
    grid-template-columns: repeat(2, 1fr);
}

/* El "justify-content" acá, hace que los elementos dentro de .panel se ajusten al espacio que tienen dentro de sus columnas propias, 
   para que no se vea disparejo */
/* La combinación de "justify-content: center" y de "align-items: center" sirven para alinear cualquier tipo de elemento al centro de su espacio, sin excepciones
   En esta se usa "space-around" pero porque se quiere ajustar las imagenes para que se vea bien en el espacio que tienen */
/* Esto modifica las dos clases que tienen "panel" en ellas */
.panel{
    display: flex;
    flex-direction: column;
    align-items: flex-end;
    justify-content: space-around;
    text-align: center;
    z-index: 7;
}

.left-panel{
    pointer-events: all;
    padding: 3rem 17% 2rem 17%;
}

.right-panel{
    pointer-events: none;
    padding: 3rem 17% 2rem 17%;
}

.panel .content{
    color: white;
    transition: .9s .6s ease-in-out;
}

.panel h3{
    font-weight: 700;
    line-height: 1;
    font-size: 1.5rem;
}

.panel p{
    font-size: 0.95rem;
    padding: 0.7rem 0;
    font-weight: 350;
}

/* Poner un espacio entre "btn" y, en el otro lado, "transparent" es esencial para hacer que el botón no tenga fondo, sino no dá lo mismo */
.btn.transparent{
    margin-top: 20px;
    background: none;
    border: 3px solid white;
    width: 150px;
    height: 41px;
    font-weight: 600;
    font-size: 0.9rem;
    color: white;
}

.image{
    width: 100%;
    transition: 1.1s .4s ease-in-out;
}

.right-panel .image,
.right-panel .content {
  transform: translateX(800px);
}

/* ANIMACIÓN */

.container.sign-up-mode:before{
    transform: translate(100%, -50%);
    right: 52%;
}

/* Esto animará la imagen y el texto puestos dentro del .left-panel */
/* 
IMPORTANTE: Esto es gracias a que establecimos que al dar click en "Registrarse" en el .left-panel entonces se crea la clase "sign-up-mode".
            O sea que cuando demos click, todo lo que tengamos comandado hacia esta clase, se hará True y se activará (animaciones, cambios de color, mover de lugar etc.)
*/
.container.sign-up-mode .left-panel .image,
.container.sign-up-mode .left-panel .content{
    transform: translateX(-800px);
}

.container.sign-up-mode .right-panel .content,
.container.sign-up-mode .right-panel .image{
    transform: translateX(0%);
}

/* Esto hará que el panel izquierda ya no pueda ser clickeable */
.container.sign-up-mode .left-panel{
    pointer-events: none;
}

/* Esto nos dejará presinar el panel derecho cuando se muestre en pantalla */
.container.sign-up-mode .right-panel{
    pointer-events: all;
}

.container.sign-up-mode .signin-signup{
    left: 25%;
}

/* Al dar click a "Registrarse" (activar el "sign-up-mode") se manda el form de sign in para atrás y se hace invisible, para poner el de sign up por delante */
.container.sign-up-mode form.sign-in-form{
    z-index: 1;
    opacity: 0;
}
.container.sign-up-mode form.sign-up-form{
    z-index: 2;
    opacity: 1;
}